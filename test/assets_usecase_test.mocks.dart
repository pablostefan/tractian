// Mocks generated by Mockito 5.4.4 from annotations
// in tractian/test/assets_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:either_dart/either.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:tractian/core/error/base_failure.dart' as _i5;
import 'package:tractian/features/assets/domain/entities/asset_entity.dart'
    as _i6;
import 'package:tractian/features/assets/domain/entities/location_entity.dart'
    as _i8;
import 'package:tractian/features/assets/domain/repositories/assets_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AssetsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAssetsRepository extends _i1.Mock implements _i2.AssetsRepository {
  @override
  _i3.Future<_i4.Either<_i5.BaseFailure, List<_i6.AssetEntity>>> getAssets(
          String? companyId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAssets,
          [companyId],
        ),
        returnValue: _i3
            .Future<_i4.Either<_i5.BaseFailure, List<_i6.AssetEntity>>>.value(
            _i7.dummyValue<_i4.Either<_i5.BaseFailure, List<_i6.AssetEntity>>>(
          this,
          Invocation.method(
            #getAssets,
            [companyId],
          ),
        )),
        returnValueForMissingStub: _i3
            .Future<_i4.Either<_i5.BaseFailure, List<_i6.AssetEntity>>>.value(
            _i7.dummyValue<_i4.Either<_i5.BaseFailure, List<_i6.AssetEntity>>>(
          this,
          Invocation.method(
            #getAssets,
            [companyId],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.BaseFailure, List<_i6.AssetEntity>>>);

  @override
  _i3.Future<
      _i4.Either<_i5.BaseFailure, List<_i8.LocationEntity>>> getLocations(
          String? companyId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLocations,
          [companyId],
        ),
        returnValue: _i3.Future<
                _i4.Either<_i5.BaseFailure, List<_i8.LocationEntity>>>.value(
            _i7.dummyValue<
                _i4.Either<_i5.BaseFailure, List<_i8.LocationEntity>>>(
          this,
          Invocation.method(
            #getLocations,
            [companyId],
          ),
        )),
        returnValueForMissingStub: _i3.Future<
                _i4.Either<_i5.BaseFailure, List<_i8.LocationEntity>>>.value(
            _i7.dummyValue<
                _i4.Either<_i5.BaseFailure, List<_i8.LocationEntity>>>(
          this,
          Invocation.method(
            #getLocations,
            [companyId],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.BaseFailure, List<_i8.LocationEntity>>>);
}
